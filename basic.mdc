---
description:
globs:
alwaysApply: false
---
# AI와 협업을 위한 규칙

## 패키지 매니저
- `npm`을 사용하여 패키지를 관리합니다.
- 모든 패키지는 `package.json`에 명시하고, `package-lock.json`을 커밋하여 의존성의 일관성을 유지합니다.

## 번들링
- `Webpack`을 사용하여 번들링을 수행합니다.
- 코드 스플리팅을 통해 성능을 최적화하고, 필요에 따라 `Babel`을 사용하여 최신 JavaScript 기능을 지원합니다.

## 테스트 코드 라이브러리
- `Jest`와 `React Testing Library`를 사용하여 단위 테스트를 작성합니다.
- `Cypress`를 사용하여 통합 테스트를 수행합니다.
- 모든 주요 기능에 대해 테스트를 작성하고, 테스트 커버리지를 80% 이상 유지합니다.

## 스타일 가이드
- `style.md`에 정의된 디자인 가이드를 따릅니다.
- `CSS-in-JS` 라이브러리인 `styled-components`를 사용하여 스타일을 관리합니다.
- 반응형 디자인을 고려하여 모바일, 태블릿, 데스크탑 환경에서 최적의 사용자 경험을 제공합니다.

## 코드 품질
- `ESLint`와 `Prettier`를 사용하여 코드 스타일을 일관되게 유지합니다.
- 코드 리뷰를 통해 코드 품질을 지속적으로 개선합니다.

## 문서화
- 모든 주요 기능과 API에 대해 문서화를 철저히 합니다.
- `README.md`와 사용자 가이드를 통해 프로젝트의 사용법과 설치 방법을 명확히 설명합니다.
